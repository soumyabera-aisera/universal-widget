name: Build and Package Zendesk App

on:
  workflow_dispatch:
    inputs:
      platform:
        description: 'Platform to build for (e.g., zendesk)'
        required: true
        default: 'zendesk'

jobs:
  build-and-package-zendesk:
    runs-on: ubuntu-latest

    steps:
      # NEW: Force git to use LF line endings to prevent CRLF issues from the runner
      - name: Set git to use LF line endings
        run: git config --global core.autocrlf false

      - name: Checkout Widget Repo
        uses: actions/checkout@v4
        with:
          path: widget-repo

      - name: Checkout Templates Repo
        uses: actions/checkout@v4
        with:
          repository: soumyabera-aisera/widget-templates
          path: templates-repo

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Build Universal Widget
        run: |
          cd widget-repo/universal-widget
          npm install
          # Use the --prod flag for the cleanest possible production build
          npx stencil build --prod

      - name: Assemble and Clean App for Packaging
        run: |
          # 1. Create the required nested directory structure
          mkdir -p ./app_dist/assets/build

          # 2. Copy manifest and translations to the app root
          cp ./templates-repo/zendesk-template/manifest.json ./app_dist/
          cp -r ./templates-repo/zendesk-template/translations ./app_dist/

          # 3. Copy logos to the main assets folder
          cp ./templates-repo/zendesk-template/assets/logo.png ./app_dist/assets/
          cp ./templates-repo/zendesk-template/assets/logo-small.png ./app_dist/assets/

          # 4. Copy the HTML shell into the 'build' subfolder
          cp ./templates-repo/zendesk-template/index.html ./app_dist/assets/build/

          # 5. Copy the NEW, simplified widget code into the 'build' subfolder
          # This path now points to the clean output of 'dist-custom-elements'
          cp -r ./widget-repo/universal-widget/dist/components/* ./app_dist/assets/build/

      - name: Install ZCLI
        run: npm install @zendesk/zcli -g

      - name: Package Zendesk App with ZCLI
        env:
          ZENDESK_SUBDOMAIN: ${{ secrets.ZENDESK_SUBDOMAIN }}
          ZENDESK_EMAIL: ${{ secrets.ZENDESK_EMAIL }}
          ZENDESK_API_TOKEN: ${{ secrets.ZENDESK_API_TOKEN }}
        run: zcli apps:package ./app_dist

      - name: Upload Zendesk App Artifact
        uses: actions/upload-artifact@v4
        with:
          name: zendesk-app-package
          path: ./app_dist/tmp/*.zip